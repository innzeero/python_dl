# 4.2 변수

# 4.2.1 변수 정의
# 변수는 '변수명=값'으로 정의.
# 프로그래밍에서 '='은 수학에서 말하는 '같다'는 이미가 아니라
# 우변의 값을 좌변의 변수명에 대입(저장)하라는 의미이다.
# 변수명은 의미 있는 이름으로 정해야 한다.

n = "강아지"
print(n)  # 강아지

# 변수명을 정할 때 몇 가지 규칙이 있다. 다음 조건을 충족시켜야 한다.
# 변수명에 사용할 수 있는 문자는 다음 세 가지이다.
# 1. 알파벳(대문자, 소문자)
# 2. 숫자
# 3. _(밑줄 문자)
# 변수명의 첫 글자는 숫자를 사용할 수 없다.
# 예약어나 키워드(if나 for 등 코드에서 특별한 의미를 가진 단어)를 변수명으로 사용하지 말 것.
# 사전 정의되어 있는 함수명(print, list 등)은 변수명으로 사용하지 말 것.

# 아래와 같이 사전정의 된 함수명을 사용하면 에러 발생
# print = "Hello"
# print(print) # TypeError: 'str' object is not callable

# 문제
n = "고양이"
print(n)  # 고양이
print('n')  # n

n = 3+7
print(n)  # 10

# 4.2.2 변수 갱신
# 기존 변수에 새로운 값을 대입하면 변수가 새로운 값으로 덮어써진다.
x = 1
print(x)  # 1
x = x + 1
print(x)  # 2

# x = x + 1은 x += 1 과 같이 짧게 적을 수 있다.
# x -= 1 / x *= 2 / x /= 2

x = 5
x *= 2
print(x)  # 10

# 문제
m = "고양이"
print(m)

m = "강아지"
print(m)  # 고양이
print(m)  # 강아지

n = 14
n *= 5
print(n)  # 70

# 4.2.3 문자열 연결
# + 는 수치 계산뿐만 아니라 '문자열 연결'에도 사용할 수 있다.
# 물론 변수와 문자열, 변수끼리의 연결도 가능하다

m = "홍길동"
print("내 이름은 " + m + "입니다.")  # 내 이름은 홍길동입니다.

# 문제
p = "서울"
print("나는 " + p + " 출신입니다.")  # 나는 서울 출신입니다
