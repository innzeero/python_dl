# 4.4 if문

# 4.4.1 비교 연산자
# 비교 연산자는 연산자 좌우에 있는 두 값의 관계를 조사한다.
# 좌우가 동잉ㄹ한 경우에는 ==을, 다른 경우에는 !=을, 부등호는 >, <, >= , <=과 같이 사용한다.
# =은 사용되지 않는다는 것에 주의!, =은 '대입'을 의미한다.

# 새로운 자료형 : bool형(불리언 자료형)
# bool형은 Ture 또는 False 중 하나의 값을 가진 자료형이다.
# int형으로 변환하면 True는 1, False는 0으로 변환.
# 비교연산자를 사용한 식이 성립할 때는 True, 그렇지 않을 때는 False이다.

print(1 + 1 == 3)  # False

# 문제
print(4 + 6 != -10)  # True

# 4.4.2 if문
# if문은 'if 조건식: ...' 의 형태를 하고 있고
# '만약 조건식이 성립한다면 ...을 실시한다.'는 조건에 따른 분기를 구현할 수 있다.
# * 분기 : 2.	정보·통신 프로그램의 실행 순서를 변경하여 다른 명령을 실행할 수 있게 하는 일.
# 조건식은 비교 연산자를 이용한 식으로, 조건식이 성립하는 True일 때만 후반의 처리를 한다.
# 조건문의 끝에는 ':'이 필요하다.
# 또한 조건이 성립했을 때 수행할 작업의 범위를 나타내기 위해 반드시 들여쓰기(인덴트, indentation)을 해야 한다.
# 조건이 성립했을 때의 행동 범위를 들여쓰기 하는 것은 파이썬의 특징이다.
# if문이 Ture일 경우 들여쓰기 한 부분이 처리된다.

n = 2
if n == 2:
    print("아쉽습니다! 당신은 " + str(n) + "번째로 도착했습니다.")

# 아쉽습니다! 당신은 2번째로 도착했습니다.

animal = "cat"
if animal == "cat":
    print("고양이가 귀엽네요.")

# 고양이가 귀엽네요.

# 문제
n = 16
if n > 15:
    print("큰 숫자")

# 큰 숫자

# 4.4.3 else
# if문에 else를 사용하면 '그렇지 않으면 ...을 한다'처럼 조건에 따른 분기를 세밀하게 할 수 있다.

n = 2
if n == 1:
    print("우승을 축하합니다!")
else:
    print("아쉽습니다! 당신은 " + str(n) + "번째로 도착했습니다.")

# 아쉽습니다! 당신은 2번째로 도착했습니다.

animal = "dog"
if animal == "cat":
    print("고양이가 귀엽네요.")
else:
    print("고양이가 아닙니다.")

# 고양이가 아닙니다.


# 문제
n = 14
if n > 15:
    print("큰 숫자")
else:
    print("작은 숫자")

# 작은 숫자

# 4.4.4 elif
# if문의 조건이 성립되지 않았을 경우 다른 조건을 정의하고 싶을 때 elif(else+if)를 사용할 수 있다.
# elif는 if에서 지정한 조건에 해당되지 않을 때 위에서 아래 순서로 조건에 해당하는지 판단한다.

number = 2

if number == 1:
    print("금메달")
elif number == 2:
    print("은메달")
elif number == 3:
    print("동메달")
else:
    print("아쉽습니다")

# 은메달

# 문제
n = 14
if n > 15:
    print("큰 숫자")
elif n >= 11:
    print("중간 숫자")
else:
    print("작은 숫자")

# 중간 숫자

# 4.4.5 and, or, not
# 비교 연산자에 대한 and, or, not을 부울 연산자(boolean operator)라고 부르며
# 조건 분기문을 기술할 때 사용한다.
# and나 or은 조건식 사이에 사용하며
# and는 복수의 조건식이 모두 True인 경우 True 반환
# or은 복수의 조건식 중 하나라도 True인 경우 True 반환
# not은 조건식 앞에 사용, 조건이 True인 경우 False를 반환, False인 경우 True를 밚노나

# 사용방법
# 조건식 and 조건식
# 조건식 or 조건식
# not 조건식

# 문제
n_1 = 14
n_2 = 28
print(n_1 > 8 and n_1 < 14)  # False
print(not(n_1**2 < n_2*5))  # True

# 연습문제 : 윤년 여부를 검사하는 프로그램 작성
# 연도가 400으로 나누어 떨어지지 않고, 100으로 나누어 떨어지면 윤년이 아니다.(평년이다)
# 위와 같지 않을 때 연도가 4로 나누어 떨어지면 윤년이다.
# 윤년이 아닌 경우 평년이다.

# x를 연도라 했을 때
# x % 400 != 0 and x % 100 == 0 일 때 윤년 아니고 평년
# 그리고 위 조건이 성립하지 않는 경우 x % 4 == 0 이면 윤년

year = 2000

if year % 400 != 0 and year % 100 == 0:
    print(str(year) + "년은 평년입니다.")
elif year % 4 == 0:
    print(str(year) + "년은 윤년입니다.")
else:
    print(str(year) + "년은 평년입니다.")

# 2000년은 윤년입니다.
